// Show/hide location inputs
function location_toggle(input_div) {
  jQuery('.hidden_field').hide();
  jQuery('.hidden_field input').attr("disabled", true);
  jQuery('#' + input_div + " input").removeAttr("disabled");
  jQuery('#' + input_div).show();
}

jQuery(document).ready(function(){

  // Properly display the information for 'File Location' based on radio button
  if (jQuery("#submission_isRemote_0").is(":checked")) {
    location_toggle("upload");
  }
  
  if (jQuery("#submission_isRemote_1").is(":checked")) {
    location_toggle("remote");
  }
  
  // Select default 'File Location' radio button
  if (!jQuery("#submission_isRemote_0").is(":checked") && !jQuery("#submission_isRemote_1").is(":checked") && !jQuery("#submission_isRemote_2").is(":checked")) {
    jQuery("#submission_isRemote_0").attr("checked", "checked")
  }

  jQuery("#submission_hasOntologyLanguage").change(function() {
    toggleOntologyFormatOptions(jQuery(this).val());
  });
  jQuery("#submission_hasOntologyLanguage").trigger("change");

  jQuery("#collapseOWLOptions").click(function() {
    var button = jQuery(this);
    button.text(button.text() == "Show advanced OWL options" ? "Hide advanced OWL options" : "Show advanced OWL options");
  })


  jQuery("#ontology_submission_form").validate({
    highlight: function(element) {
      $(element).closest('.form-group').addClass('has-error');
    },
    unhighlight: function(element) {
      $(element).closest('.form-group').removeClass('has-error');
    },
    errorElement: 'span',
    errorClass: 'help-block error-help-block',
    errorPlacement: function(error, element) {
      if(element.parent('.input-group').length) {
        error.insertAfter(element.parent());
      } else {
        error.insertAfter(element);
      }
    }  
  });
});


function toggleOntologyFormatOptions(selectedFormat) {
  var advancedOWLOptionsButton = jQuery("#collapseOWLOptions");
  var skosHelpText = jQuery("#helpSkosFormat");
  
  switch(selectedFormat){
    case 'OWL':
      advancedOWLOptionsButton.show();
      skosHelpText.hide();
      break;
    case 'SKOS':
      advancedOWLOptionsButton.hide();
      skosHelpText.show();
      break;
    default:
      advancedOWLOptionsButton.hide();
      skosHelpText.hide();
  }
}
