

:javascript
  $(document).ready(function() {
    
    jQuery(".datepicker").datepicker({
      showOn: 'button',
      buttonImage: "#{image_path('calendar.gif')}",
      buttonImageOnly: true,
      buttonText: 'Choose a release date',
      dateFormat: 'yy-mm-dd'
    });
    
    // Properly display the information for 'File Location' based on radio button
    if (jQuery("#submission_isRemote_0").is(":checked")) {
      location_toggle("upload");
    }
    if (jQuery("#submission_isRemote_1").is(":checked")) {
      location_toggle("remote");
    }
    
    // Select default 'File Location' radio button
    if (!jQuery("#submission_isRemote_0").is(":checked") && !jQuery("#submission_isRemote_1").is(":checked") && !jQuery("#submission_isRemote_2").is(":checked")) {
      jQuery("#submission_isRemote_0").attr("checked", "checked")
    }
    // Handles showing/hiding options for a particular ontology format
    jQuery("#submission_hasOntologyLanguage").change(ontologyFormatChange);
    
    // Check to see if owl is selected, show options if so
    ontologyFormatChange();
    jQuery("#ontology_submission_form").validate();

    jQuery('#add_contact_button').click(function(event) {
      addContact();
      event.preventDefault();
    })
  });
  
  // Show/hide location inputs
  function location_toggle(input_div) {
    jQuery('.hidden_field').hide();
    jQuery('.hidden_field input').attr("disabled", true);
    jQuery('#' + input_div + " input").removeAttr("disabled");
    jQuery('#' + input_div).show();
  }

  function ontologyFormatChange(format){
    var selected = jQuery("#submission_hasOntologyLanguage option:selected");

    switch(selected.val()){
      case 'OWL':
        jQuery(".format_options").optionsOut("fast");
        jQuery("#owl_options").optionsIn("fast");
        break;
      case 'SKOS':
        jQuery(".format_options").optionsOut("fast");
        jQuery("#skos_options").optionsIn("fast");
        break;
      case 'OBO':
        jQuery(".format_options").optionsOut("fast");
        jQuery("#obo_options").optionsIn("fast");
        break;
      case 'UMLS':
        jQuery(".format_options").optionsOut("fast");
        jQuery("#umls_options").optionsIn("fast");
        break;
      default:
        jQuery(".format_options").optionsOut("fast");
    }
  }
  
  jQuery.fn.optionsIn = function(speed, easing, callback){
    jQuery("#format_spacing").css("margin", "1em 0");
    this.fadeIn(speed);
  };

  jQuery.fn.optionsOut = function(speed, easing, callback){
    this.css("display", "none");
    jQuery("#format_spacing").css("margin", "0");
  };
  
  function addContact() {
    var contact = jQuery(jQuery("#contacts").children(".contact")[0]);
    var newContact = jQuery(jQuery("<div>").html(contact.html()).addClass("contact"));
    newContact.children("input").each(function(){
      var index =  jQuery("#contacts").children(".contact").length;
      var newId = jQuery(this).attr("id").replace(/0/g, index);
      var newName = jQuery(this).attr("name").replace(/0/g, index);
      jQuery(this).attr("id", newId).attr("name", newName).attr("value", "")
    })
    jQuery("#contacts").append(newContact);
  }

- unless @errors.nil?
  %div.form-group.row
    %div.col-sm-10.offset-sm-2.enable-lists{style: "color:red;"}
      %strong Errors On Form
      %ul
        - for error in @errors
          %li
            = error          

%div#editMetadataDiv
  %div{:style => "width: 50%;margin: 3em auto;"}
    %p{:style => "text-align: center;"}
      To understand the ontologies metadata:
      %a{:href => "https://github.com/agroportal/documentation/wiki/Ontology-metadata", :target => "_blank"} see the Wiki
    %div{:style => "text-align: center;"}
      %span.asterik * fields are required
      %br
      %span.extractedAsterix * metadata that can be extracted from the ontology

= hidden_field :submission, :ontology, value: @ontology.id

%div.card.mt-4
  %div.card-header General
  %div.card-body
    %div.card-text
      -# Format
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "submission_hasOntologyLanguage"} 
          Format
          %span.asterik *
        %div.col-sm-10
          - ont_formats = ["OBO", "OWL", "UMLS", "SKOS"].sort
          - selected = @submission.hasOntologyLanguage ? @submission.hasOntologyLanguage : "OWL"
          -# TODO: Add/remove aria-describedby attribute for SKOS help text display
          = select "submission", "hasOntologyLanguage", options_for_select(ont_formats, selected), {required: true}, {class: "form-control"}
          %small.form-text.text-muted#helpSkosFormat
            SKOS vocabularies submitted to BioPortal must contain a minimum of one concept scheme and top concept assertion. |
            Please refer to the NCBO wiki for a more <a href="https://www.bioontology.org/wiki/index.php/SKOSSupport", target="_blank">detailed explanation</a> |
            with examples. |

      %div.form-group.row
        %div.col-sm-10.offset-sm-2
          %a#collapseOWLOptions{href: "#owl-options", role: "button", data: {toggle: "collapse"}, aria: {expanded: "false", controls: "owl-options"}, |
          class: "btn btn-outline-secondary btn-sm"} Show advanced OWL options |

      -# Optional property overrides for OWL ontologies
      %div#owl-options.collapse
        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label Customize default property settings

        -# Preferred name
        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label{for: "submission_prefLabelProperty"} Preferred name
            = text_field :submission, :prefLabelProperty, value: @submission.prefLabelProperty, class: "form-control form-control-sm", aria: {describedBy: "preferredNameHelpBlock"}
            %small.form-text.text-muted#preferredNameHelpBlock 
              Enter a property ID, or use the default setting: |
              <a href="http://www.w3.org/2004/02/skos/core#prefLabel", target="_blank">http://www.w3.org/2004/02/skos/core#prefLabel</a>. |
  
        -# Synonym
        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label{for: "submission_synonymProperty"} Synonym
            = text_field :submission, :synonymProperty, value: @submission.synonymProperty, class: "form-control form-control-sm", aria: {describedBy: "synonymHelpBlock"}
            %small.form-text.text-muted#synonymHelpBlock
              Enter a property ID, or leave blank to use the default setting: |
              <a href="http://www.w3.org/2004/02/skos/core#altLabel", target="_blank">http://www.w3.org/2004/02/skos/core#altLabel</a>. |
  
        -# Definition
        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label{for: "submission_definitionProperty"} Definition
            = text_field :submission, :definitionProperty, value: @submission.definitionProperty, class: "form-control form-control-sm", aria: {describedBy: "definitionHelpBlock"}
            %small.form-text.text-muted#definitionHelpBlock
              Enter a property ID, or leave blank to use the default setting: |
              <a href="http://www.w3.org/2004/02/skos/core#definition", target: "_blank">http://www.w3.org/2004/02/skos/core#definition</a>. |

        -# Author
        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label{for: "submission_authorProperty"} Author
            = text_field :submission, :authorProperty, value: @submission.authorProperty, class: "form-control form-control-sm", aria: {describedBy: "authorHelpBlock"}
            %small.form-text.text-muted#authorHelpBlock
              Enter a property ID, or leave blank to use the default setting: |
              <a href="http://purl.org/dc/elements/1.1/creator", target: "_blank">http://purl.org/dc/elements/1.1/creator</a>. |

        -# Obsolete classes
        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label Identify obsolete classes

        %div.form-group.row 
          %div.col-sm-10.offset-sm-2
            %label{for: "submission_obsoleteProperty"} Obsolete property
            = text_field :submission, :obsoleteProperty, value: @submission.obsoleteProperty, class: "form-control form-control-sm", aria: {describedBy: "obsoleteHelpBlock"}
            %small.form-text.text-muted#obsoleteHelpBlock 
              Optionally enter a property ID that indicates obsolete status for ontology classes |
              (the property value must be set to "true"). Note that by default, BioPortal checks for existence of the owl:deprecated property. |

        %div.form-group.row
          %div.col-sm-10.offset-sm-2
            %label{for: "submission_obsoleteParent"} Obsolete branch root
            = text_field :submission, :obsoleteParent, value: @submission.obsoleteParent, class: "form-control form-control-sm", aria: {describedBy: "obsoleteRootHelpBlock"}
            %small.form-text.text-muted#obsoleteRootHelpBlock 
              Optionally enter a class ID for the root of an obsolete branch. All classes in the branch will be marked as |
              obsolete, with the exception of the root class. |

      -# Version
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "submission_version"} Version
        %div.col-sm-10
          = text_field :submission, :version, value: @submission.version, class: "form-control"

      -# Status
      %div.form-group.row
        %label.col-sm-2.col-form-lable{for: "submission_status"} 
          Status
          %span.asterik *
        %div.col-sm-10
          - selected_status = @submission.status ? @submission.status : "alpha"
          - status_options = ["alpha", "beta", "production", "retired"]
          = select :submission, :status, status_options, {selected: selected_status, required: true}, class: "form-control"

      -# Release date
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "datepicker"} 
          Release date
          %span.asterik *
        %div.col-sm-10
          %div.input-group
            - release_date = @submission.released ? Date.parse(@submission.released) : Date.today
            = text_field(:submission, :released, id: "datepicker", value: "#{l(release_date, format: :month_day_year)}", required: true, class: "form-control", readonly: "readonly")
            %div.input-group-append
              %span.input-group-text
                %i{class: "fas fa-calendar-alt fa-lg", aria: {hidden: "true"}}

      -# Location
      %div#submissionLocation.form-group.row
        %label.col-sm-2.col-form-label.pt-0
          Location
          %span.asterik *
        %div.col-sm-10
          - if !@masterFileOptions
            %div.form-check
              - checked = @ontology.summaryOnly
              = radio_button(:submission, :isRemote, 3, :onclick=>"$('.hidden_field').hide();", checked: checked, aria: {describedBy: "metadataHelpBlock"}, class: "form-check-input")
              %label.form-check-label{for: "submission_isRemote_3"} 
                Metadata only
              %small.form-text.text-muted#metadataHelpBlock Allow users to view and search your ontology metadata, but not its classes and properties.
            %div.form-check
              - checked = !(@submission.pullLocation.nil? || @submission.pullLocation.empty?)
              = radio_button(:submission, :isRemote, 1, :onclick=>"location_toggle('remote');", checked: checked, aria: {describedBy: "loadFromURLHelpBlock"}, class: "form-check-input")
              %label.form-check-label{for: "submission_isRemote_1"} 
                Load from URL
              %small.form-text.text-muted#loadFromURLHelpBlock New versions loaded on a nightly basis.
              - display = (checked and "" or "display:none;")
              %div.hidden_field#remote{style: display}
                = text_field(:submission, :pullLocation, value: @submission.pullLocation, aria: {describedBy: "enterURLHelpBlock"}, class: "form-control")
                %small.form-text.text-muted#enterURLHelpBlock Enter a URL, including the name of your ontology source file, e.g., http://www.example.com/my_ontology.owl.
            %div.form-check
              - checked = (!@ontology.summaryOnly) && @submission.pullLocation.nil?
              = radio_button(:submission, :isRemote, 0, :onclick=>"location_toggle('upload');", checked: checked, class: "form-check-input")
              %label.form-check-label{for: "submission_isRemote_0"} 
                Upload local file
              - display = (checked and "" or "display:none;")
              %div.hidden_field#upload{style: display}
                = f.file_field(:filePath, class: "mt-2")
          - else
            -# TODO: Has this section of code actually been tested?
            = radio_button :submission, :isRemote, 0, :onclick=>"location_toggle('upload');", checked: true
            Upload Local File
            %br/
            %span{:style => "font-size:11px;"} (choose a file on your local file system to upload)
            - display = (checked and "" or "display:none;")
            %div#upload{style: display}
              = f.file_field :filePath, required: true
              = f.select("masterFileName", @masterFileOptions, { include_blank: "Select primary file from zip contents", required: true}, {style: "border-color: red;"})

%div.card.mt-4
  %div.card-header Key properties
  %div.card-body
    %div.card-text
      %div.row
        %div.col-md-3
          -# generate_attribute functions are defined in submissions_helper.rb
          = generate_attribute_label("URI")
        %div.col-md-9
          = raw generate_attribute_input("URI")
      %div.row
        %div.col-md-3
          = generate_attribute_label("status")
          %span.asterik *
        %div.col-md-9
          - selected_status = @submission.status ? @submission.status : "alpha"
          - status_options = ["alpha", "beta", "production", "retired"]
          = select :submission, :status, status_options, { :selected => selected_status, :required => true}, {:class => "form-control"}
      %div.row
        %div.col-md-3
          = generate_attribute_label("deprecated")
        %div.col-md-9
          = raw generate_attribute_input("deprecated")
      %div.row
        %div.col-md-3
          = generate_attribute_label("version")
        %div.col-md-9
          = raw generate_attribute_input("version")
      %div.row
        %div.col-md-3
          = generate_attribute_label("hasOntologySyntax")
        %div.col-md-9
          = generate_attribute_input("hasOntologySyntax")
          %p
            Properties taken from
            = link_to "W3C URIs for file format", "https://www.w3.org/ns/formats/", target: "_blank"
      %div.row
        %div.col-md-3
          = generate_attribute_label("hasFormalityLevel")
        %div.col-md-9
          = generate_attribute_input("hasFormalityLevel")
          %p
            Properties taken from
            = link_to "DCMI KOS type vocabularies", "http://wiki.dublincore.org/index.php/NKOS_Vocabularies#KOS_Types_Vocabulary", target: "_blank"
      %div.row
        %div.col-md-3
          = generate_attribute_label("isOfType")
        %div.col-md-9
          = generate_attribute_input("isOfType")
      %div.row
        %div.col-md-3
          = generate_attribute_label("naturalLanguage")
        %div.col-md-9
          = generate_attribute_input("naturalLanguage")
          %p
            Consider using a
            = link_to "Lexvo URI", "http://www.lexvo.org", target: "_blank"
            with ISO639-3 code
            %br
            e.g.: http://lexvo.org/id/iso639-3/eng

%div.card.mt-4
  %div.card-header Description
  %div.card-body
    %div.card-text
      -# Description
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "submission_description"} 
          Description
          %span.asterik *
        %div.col-sm-10
          = text_area :submission, :description, rows: 5, value: @submission.description, required: true, class: "form-control"
      -# Home page
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "submission_homepage"} Homepage
        %div.col-sm-10
          = text_field :submission, :homepage, value: @submission.homepage, class: "form-control", aria: {describedBy: "homepageHelpBlock"}
          %small.form-text.text-muted#homepageHelpBlock Enter a URL for the main page of your ontology.

      -# Documentation page
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "submission_documentation"} Documentation
        %div.col-sm-10
          = text_field :submission, :documentation, value: @submission.documentation, class: "form-control", aria: {describedBy: "docsHelpBlock"}
          %small.form-text.text-muted#docsHelpBlock Enter a URL for a page that provides ontology documentation.

      -# Publications page
      %div.form-group.row
        %label.col-sm-2.col-form-label{for: "submission_publication"} Publications
        %div.col-sm-10
          = text_field :submission, :publication, value: @submission.publication, class: "form-control", aria: {describedBy: "pubsHelpBlock"}        
          %small.form-text.text-muted#pubsHelpBlock Enter a URL for a page that lists publications about your ontology.

%div#community.mt-4
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#contacts'} Contacts
    %div#contacts.collapse.show{'data-parent'=>"#community"}
      %div.card-body
        -# Contact(s)
        %div#contacts.form-group.row
          %label.col-sm-2.col-form-label
            Contact
            %span.asterik *
          - if @submission.contact && @submission.contact.size > 0
            - @submission.contact.each_with_index do |contact, i|
              - if i == 0
                -# Contact div
                %div.col-sm-10.d-flex.align-items-center.contact
                  %label Name
                  = text_field :submission, :"contact[#{i}][name]", value: contact["name"], class: "form-control flex-grow-1 mx-2"
                  %label Email
                  = text_field :submission, :"contact[#{i}][email]", value: contact["email"], class: "form-control flex-grow-1 mx-2"
                  %button.btn.btn-success.add-contact
                    %i{class: "fas fa-plus fa-lg", aria: {hidden: "true"}}
              - else
                -# TODO
                -# Secondary contacts need to be offset by 2 columns, and have a delete button.
                %div.col-sm-10.d-flex.align-items-center.offset-sm-2.contact
                  %label Name
                  = text_field :submission, :"contact[#{i}][name]", value: contact["name"], class: "form-control flex-grow-1 mx-2"
                  %label Email
                  = text_field :submission, :"contact[#{i}][email]", value: contact["email"], class: "form-control flex-grow-1 mx-2"
                  %button.btn.btn-success.add-contact
                    %i{class: "fas fa-plus fa-lg", aria: {hidden: "true"}}
                  %button.btn.btn-danger.ml-1.remove-contact
                    %i{class: "fas fa-minus fa-lg", aria: {hidden: "true"}}
          - else
            -# TODO
            %div.col-sm-10.d-flex.align-items-center.contact
              %label Name:
              = text_field :submission, :"contact[0][name]", class: "form-control flex-grow-1 mx-2"
              %label Email:
              = text_field :submission, :"contact[0][email]", class: "form-control flex-grow-1 mx-2"
              %button.btn.btn-success.add-contact
                %i{class: "fas fa-plus fa-lg", aria: {hidden: "true"}}
        %div.form-group.row
          %div.col-sm-2
            = generate_attribute_label("hasContributor")
          %div.col-sm-10
            = raw generate_attribute_input("hasContributor")
        %div.form-group.row
          %div.col-sm-2
            = generate_attribute_label("hasCreator")
          %div.col-sm-10
            = raw generate_attribute_input("hasCreator")
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#more-community-info'}  More community information
    %div#more-community-info.collapse{'data-parent'=>"#community"}
      %div.card-body
        - for attr in @metadata
          - if attr["display"].eql? "community"
            %div.form-group.row
              %div.col-sm-2
                = generate_attribute_label(attr["attribute"])
              %div.col-sm-10
                = raw generate_attribute_input(attr["attribute"])
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#more-people-info'}  More people information
    %div#more-people-info.collapse{'data-parent'=>"#community"}
      %div.card-body
        - for attr in @metadata
          - if attr["display"].eql? "people"
            %div.form-group.row
              %div.col-sm-2
                = generate_attribute_label(attr["attribute"])
              %div.col-sm-10
                = raw generate_attribute_input(attr["attribute"])

%div#ontology-relations-more.mt-4
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#ontology-relations'} Ontology relations
    %div#ontology-relations.collapse.show{'data-parent'=>"#ontology-relations-more"}
      %div.card-body
        %div.form-group.row
          %div.col-sm-3
            = generate_attribute_label("useImports")
          %div.col-sm-9
            = raw generate_attribute_input("useImports")
        %div.form-group.row
          %div.col-sm-3
            = generate_attribute_label("hasPriorVersion")
          %div.col-sm-9
            = raw generate_attribute_input("hasPriorVersion")
        %div.form-group.row
          %div.col-sm-3
            = generate_attribute_label("isAlignedTo")
          %div.col-sm-9
            = raw generate_attribute_input("isAlignedTo")
        %div.form-group.row
          %div.col-sm-3
            = generate_attribute_label("ontologyRelatedTo")
          %div.col-sm-9
            = raw generate_attribute_input("ontologyRelatedTo")
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#more-relations'}  More relations
    %div#more-relations.collapse{'data-parent'=>"#ontology-relations-more"}
      %div.card-body
        - for attr in @metadata
          - if attr["display"].eql?("relations")
            %div.form-group.row
              %div.col-sm-3
                = generate_attribute_label(attr["attribute"])
              %div.col-sm-9
                = raw generate_attribute_input(attr["attribute"])

%div#ontology-content-metrics.mt-4
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#ontology-content'} Ontology content
    %div#ontology-content.collapse.show{'data-parent'=>"#ontology-content-metrics"}
      %div.card-body
        %div.form-group.row
          %div.col-sm-3
            = generate_attribute_label("preferredNamespacePrefix")
          %div.col-sm-9
            = raw generate_attribute_input("preferredNamespacePrefix")
        %div.form-group.row
          %div.col-sm-3
            = generate_attribute_label("preferredNamespaceUri")
          %div.col-sm-9
            = raw generate_attribute_input("preferredNamespaceUri")
  %div.card
    %div.card-header
      %a.card-link{'data-toggle'=>'collapse', :href=>'#more-informations'}  More content informations
    %div#more-informations.collapse{'data-parent'=>"#ontology-content-metrics"}
      %div.card-body
        - for attr in @metadata
          - if attr["display"].eql? "content"
            %div.form-group.row
              %div.col-sm-3
                = generate_attribute_label(attr["attribute"])
              %div.col-sm-9
                = raw generate_attribute_input(attr["attribute"])

%div.form-group.row
  %div.col-sm-10.offset-sm-2
    %label.col-form-label.font-italic * Fields marked with an asterisk are required.  

%div.form-group.row
  %div.col-sm-10.offset-sm-2
    %div.form-inline
      = submit_tag button_text, class: "btn btn-primary mr-sm-2"
      = link_to "Cancel", :back, class: "btn btn-primary"

:javascript

  $(document).ready(function() {
    $('#submission_hasLicense').change(function() {
      if ($('#submission_hasLicense').val() == "other") {
        $('#submission_licenseText').val("");
        $('#submission_licenseText').show();
      } else {
        $('#submission_licenseText').val($('#submission_hasLicense').val());
        $('#submission_licenseText').hide();
      }
    });
    $('#submission_usedOntologyEngineeringTool').change(function() {
      if ($('#submission_usedOntologyEngineeringTool').val() == "other") {
        $('#submission_ontologyToolText').val("");
        $('#submission_ontologyToolText').show();
      } else {
        $('#submission_ontologyToolText').val($('#submission_usedOntologyEngineeringTool').val());
        $('#submission_ontologyToolText').hide();
      }
    });
    $('#naturalLanguageSelect').change(function() {
      if ($('#naturalLanguageSelect').val() == "other") {
        $('#submission_naturalLanguage').val("");
        $('#submission_naturalLanguage').show();
      } else {
        $('#submission_naturalLanguage').val($('#naturalLanguageSelect').val());
        $('#submission_naturalLanguage').hide();
      }
    });

    /**
     * For Multiple select
     */
    "use strict";
    jQuery("#naturalLanguageSelect").chosen({
      search_contains: true
    });
    jQuery(".selectOntology").chosen({
      search_contains: true
    });
    /*
    $('.tooltip').tooltipster({
      interactive: true,
      position: "right",
      contentAsHTML: true,
      animation: 'fade',
      delay: 200,
      theme: 'tooltipster-light',
      trigger: 'hover'
    });
    */
  })

  /**
   * To add a new input when btn clicked. Using the given attribute to get elements id
   */
  function addInput(attr, inputType)
  {
    var container = document.createElement("div");
    container.innerHTML = '<input type="' + inputType + '" name="submission[' + attr + '][]" id="submission_' + attr + '" style="margin-bottom: 0.3em;" class="form-control"><br>';
    document.getElementById(attr + 'Div').appendChild(container);
  }

  /**
   * To add a new value to selectDropdown when btn clicked
   */
  function addValueToSelect(attr)
  {
    if(jQuery('#add_' + attr).val()) {
      var newOption = jQuery('#add_' + attr).val();
      var selectedOptions = jQuery('#select_' + attr).val();
      jQuery('#select_' + attr).append(jQuery('<option>', {
        value: newOption,
        text: newOption
      }));
      if (selectedOptions.constructor === Array) {
        selectedOptions.push(newOption);
      } else {
        selectedOptions = newOption;
      }
      jQuery('#select_' + attr).val(selectedOptions)
      jQuery('#add_' + attr).val("");
      jQuery('#btnAdd' + attr).hide();
      jQuery('#add_' + attr).hide();
    }
  }

  /**
   * To add a new value to selectDropdown when btn clicked
   */
  function addOntoToSelect(attr)
  {
    if(jQuery('#add_' + attr).val()) {
      var newOption = jQuery('#add_' + attr).val();
      var selectedOptions = jQuery('#select_' + attr).val();
      jQuery('#select_' + attr).append(jQuery('<option>', {
        value: newOption,
        text: newOption
      }));
      if (selectedOptions === null) {
        selectedOptions = [];
        selectedOptions.push(newOption);
      } else if (selectedOptions.constructor === Array) {
        selectedOptions.push(newOption);
      } else {
        selectedOptions = newOption;
      }
      jQuery('#select_' + attr).val(selectedOptions)
      jQuery('#select_' + attr).trigger("chosen:updated");
      jQuery('#add_' + attr).val("");
    }
  }

  /**
   * To show/hide the simple metadata div
   */
  function toggleDiv(divId, panelGroup = "none")
  {
    var e = document.getElementById(divId + "Div");
    if (e.style.display == 'block') {
      e.style.display = 'none';
      document.getElementById(divId + "Btn").classList.remove("active");
    } else {
      if (panelGroup === "description") {
        // if panel chosen isPart of description, close the others
        jQuery(".descriptionPanels").css("display", "none");
        jQuery(".descriptionBtn").removeClass("active");
      } else if (panelGroup === "commuple") {
        jQuery(".commuplePanels").css("display", "none");
        jQuery(".commupleBtn").removeClass("active");
      } else if (panelGroup === "ontocontent") {
        jQuery(".ontocontentPanels").css("display", "none");
        jQuery(".ontocontentBtn").removeClass("active");
      }

      e.style.display = 'block';
      document.getElementById(divId + "Btn").classList.add("active");
    }
  }
